<?php

/**
 * @file
 * Enables the use of jQuery SmartMenus plugin for Drupal menus.
 */

/**
 * Implements hook_menu().
 */
function smartmenus_drupal_menu() {
  $items['admin/config/user-interface/smartmenus_drupal'] = array(
    'title' => 'SmartMenus',
    'description' => 'Configure SmartMenus Menus',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('smartmenus_drupal_admin_settings'),
    'access arguments' => array('administer smartmenus_drupal'),
    'file' => 'smartmenus_drupal.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function smartmenus_drupal_permission() {
  return array(
    'administer smartmenus_drupal' => array(
      'title' => t('Administer SmartMenus'),
    ),
  );
}

/**
 * Implements hook_help().
 */
function smartmenus_drupal_help($path, $arg) {
  $output = '';
  switch ($path) {
    case 'admin/modules#description':
      $output .= t('jQuery SmartMenus plugin for your Drupal menus.');
      break;

    case 'admin/config/user-interface/smartmenus_drupal':
      $output .= t('<p>Block-specific SmartMenus settings could be found at !link</p>', array('!link' => l(t('Blocks management'), 'admin/structure/block')));
      break;
  }
  return $output;
}

/**
 * Implements hook_block_info().
 */
function smartmenus_drupal_block_info() {
  $blocks = array();
  $number = variable_get('smartmenus_drupal_number', 4);
  for ($i = 1; $i <= $number; $i++) {
    $blocks[$i] = array(
      'info' => variable_get('smartmenus_drupal_name_' . $i, 'SmartMenus ' . $i) . ' (SmartMenus)',
      'cache' => DRUPAL_NO_CACHE,
    );
  }
  return $blocks;
}


/**
 * Implements hook_block_configure().
 */
function smartmenus_drupal_block_configure($delta = 0) {
  $block_settings = variable_get('smartmenus_drupal_block_settings_' . $delta );
  $form = $menu_default = array();

  // Integration with the Domain Access module.
  if (module_exists('domain_conf')) {
    $main = variable_get('menu_main_links_source');
    $secondary = variable_get('menu_secondary_links_source');
    if ($main) {
      $menu_default['domainaccessmenu1st-' . $main . ':0'] = t('Domains Access') . ': ' . t('Main links');
    }
    if ($secondary) {
      $menu_default['domainaccessmenu2nd-' . $secondary . ':0'] = t('Domains Access') . ': ' . t('Secondary links');
    }
  }
  $menu_default += menu_parent_options(menu_get_menus(), array('mlid' => 0));

  $form['block_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Block description'),
    '#description' => t('A brief description of your block. Used on the !link', array('!link' => l(t('Blocks administration page'), 'admin/structure/block'))),
    '#default_value' => $block_settings['block_name'],
  );
  $form['sf-settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('SmartMenus settings'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $form['sf-settings']['main_menu'] = array(
    '#type' => 'select',
    '#title' => t('Menu'),
    '#description' => t('The menu you want to be displayed using SmartMenus.') . ' <em>(' . t('Default') . ': &lt;Main menu&gt;)</em>',
    '#default_value' => $block_settings['main_menu'],
    '#options' => $menu_default,
  );
  $form['sf-settings']['orientation'] = array(
    '#type' => 'radios',
    '#title' => t('Type'),
    '#default_value' => $block_settings['orientation'],
    '#options' => array(
      'horizontal' => t('Horizontal (single row)') . ' <em>(' . t('Default') . ')</em>',
      'vertical' => t('Vertical (stack)')
    ),
  );
  $form['sf-settings']['menu_style'] = array(
    '#type' => 'select',
    '#title' => t('Style'),
    '#description' => '<em>(' . t('Default') . ': ' . t('None') . ')</em>',
    '#default_value' => $block_settings['menu_style'],
    '#options' => smartmenus_drupal_styles(),
  );
  return $form;
}




/**
 * Helper function to get library paths.
 */
function smartmenus_drupal_get_path($library = 'smartmenus') {
  $directory = '';
  // Ensure the Libraries API module is installed.
  if (module_exists('libraries') && function_exists('libraries_get_path')) {
    $directory = libraries_get_path($library);
  }
  // Otherwise use the default directory.
  elseif (file_exists('profiles/' . drupal_get_profile() . '/libraries/' . $library)) {
    $directory = 'profiles/' . drupal_get_profile() . '/libraries/' . $library;
  }
  if (empty($directory)) {
    $directory = 'sites/all/libraries/' . $library;
  }
  return $directory;
}


/**
 * Implements hook_block_save().
 */
function smartmenus_drupal_block_save($delta = 0, $edit = array()) {
  // we copy the edit array directly... the $delta will be enough to diferentiate between the different blocks  
  variable_set('smartmenus_drupal_block_settings_' . $delta, $edit);
}




/**
 * Get a list of CSS files that can be used for styles.
 */
function smartmenus_drupal_styles($display = 'list', $style = NULL) {
  $output = '';
  $directory = smartmenus_drupal_get_path('smartmenus') . '/css';
  //here we get our css theme files
  $css_files = array_filter(glob($directory . "/*/*.css"));
  $file_array = '';
  foreach($css_files as $css_file)
  {
    $file_array[basename($css_file, ".css" )] = $css_file;
  }

  if ($display == 'list') {
    $output = array('none' => '- ' . t('None') . ' -');
    if (is_array($file_array)) {
      foreach ($file_array as $file_name => $file_path) {
        $output[$file_name] = $file_name;
      }
    }
    natcasesort($output);
  }
  if ($display == 'path' && $style) {
    if (isset($file_array[$style])) {
      $output = array($file_array[$style] => array('type' => 'file', 'weight' => 500));
    }
    else {
      watchdog('page not found', 'Cannot find the required subdirectories for the SmartMenus \'%style\' style.', array('%style' => $style), WATCHDOG_WARNING);
      $output = '';
    }
  }
  return $output;
}
